(self.webpackChunk=self.webpackChunk||[]).push([[143],{138:(e,t,a)=>{const n=a(809),{lightningChart:s,ColorRGBA:o,LUT:i,PalettedFill:r,AxisScrollStrategies:l,UIElementBuilders:c,UIOrigins:m,UILayoutBuilders:d,UIBackgrounds:g,Themes:u}=n,{createSpectrumDataGenerator:x}=a(27),p=120,h=new r({lut:new i({steps:[{value:15,color:o(0,0,0)},{value:30,color:o(255,255,0)},{value:45,color:o(255,204,0)},{value:60,color:o(255,128,0)},{value:100,color:o(255,0,0)}],units:"dB",interpolate:!0}),lookUpProperty:"y"}),S=s().Chart3D({disableAnimations:!0}).setTitle("3D Box Series Spectrogram").setBoundingBox({x:1,y:1,z:2});S.setCameraLocation({x:.1,y:.08,z:1.2}),S.getDefaultAxisY().setScrollStrategy(l.expansion).setInterval(0,100).setTitle("Power spectrum P(f)"),S.getDefaultAxisX().setTitle("Frequency (Hz)"),S.getDefaultAxisZ().setTitle("Time").setInterval(0,-120).setScrollStrategy(l.progressive);const f=S.addBoxSeries().setFillStyle(h).setRoundedEdges(void 0).setName("Spectrogram (box)"),y=[];for(let e=0;e<p;e++){const t=[];for(let a=0;a<60;a++){const n=60*e+a;f.invalidateData([{id:n,yMin:0,yMax:0,zMin:0,zMax:0,xMin:a,xMax:a+1}]),t.push(n)}y.push(t)}S.addLegendBox().setAutoDispose({type:"max-width",maxWidth:.3}).add(S);let B=0;x().setSampleSize(60).setNumberOfSamples(p).setVariation(5).generate().setStreamRepeat(!0).setStreamInterval(1e3/60).setStreamBatchSize(1).toStream().map((e=>e.map((e=>80*e)))).forEach((e=>{if(M.getOn()||B<p){const t=y[B%p],a=e.map(((e,a)=>({id:t[a],yMin:0,yMax:e,zMin:B,zMax:B+1})));f.invalidateData(a),B++}})),(async()=>{const e=await fetch(document.head.baseURI+"examples/assets/0904/camera.json").then((e=>e.json()));if(!e)return void console.log("No Camera animation data.");console.log("Loaded Camera animation data.");let t=0;const a=()=>{if(O.getOn()){const{cameraLocation:a}=e.frames[Math.floor(t)%e.frames.length];S.setCameraLocation(a),t+=2}requestAnimationFrame(a)};requestAnimationFrame(a)})();const v=S.addUIElement(d.Column.setBackground(g.Rectangle));v.setPosition({x:0,y:100}).setOrigin(m.LeftTop).setMargin(10).setPadding(4).setAutoDispose({type:"max-height",maxHeight:.3});const D=e=>{M.setText(e?"Disable infinite streaming data":"Enable infinite streaming data"),M.getOn()!==e&&M.setOn(e)},M=v.addElement(c.CheckBox);M.onSwitch(((e,t)=>D(t))),D(!0);const C=e=>{O.setText(e?"Disable camera animation":"Enable camera animation"),O.getOn()!==e&&O.setOn(e)},O=v.addElement(c.CheckBox);O.onSwitch(((e,t)=>C(t))),C(!0),S.onBackgroundMouseDrag((()=>{C(!1)}))}},e=>{e.O(0,[736],(()=>(138,e(e.s=138)))),e.O()}]);