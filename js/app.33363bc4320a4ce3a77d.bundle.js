(self.webpackChunk=self.webpackChunk||[]).push([[524],{44:(e,t,a)=>{const s=a(377),n=a(613),{lightningChart:i,ColorRGBA:o,LUT:r,PalettedFill:l,AxisScrollStrategies:d,UIElementBuilders:m,UIOrigins:c,UILayoutBuilders:g,UIBackgrounds:u,regularColorSteps:h,Themes:p}=s,{createSpectrumDataGenerator:x}=n,f=120,S=i({resourcesBaseUrl:new URL(document.head.baseURI).origin+new URL(document.head.baseURI).pathname+"resources/"}).Chart3D({theme:p[new URLSearchParams(window.location.search).get("theme")||"darkGold"]||void 0}).setTitle("3D Box Series Spectrogram").setBoundingBox({x:1,y:1,z:2});S.setCameraLocation({x:.1,y:.08,z:1.2}),S.getDefaultAxisY().setScrollStrategy(d.expansion).setInterval({start:0,end:100,stopAxisAfter:!1}).setTitle("Power spectrum").setUnits("P(f)"),S.getDefaultAxisX().setTitle("Frequency").setUnits("Hz"),S.getDefaultAxisZ().setTitle("Time").setDefaultInterval((e=>({end:e.dataMax,start:(e.dataMax??0)-f,stopAxisAfter:!1}))).setScrollStrategy(d.progressive);const U=new l({lut:new r({steps:h(0,100,S.getTheme().examples.intensityColorPalette),units:"dB",interpolate:!0}),lookUpProperty:"y"}),y=S.addBoxSeries().setFillStyle(U).setRoundedEdges(void 0).setName("Spectrogram (box)"),w=[];for(let e=0;e<f;e++){const t=[];for(let a=0;a<60;a++){const s=60*e+a;y.invalidateData([{id:s,yMin:0,yMax:0,zMin:0,zMax:0,xMin:a,xMax:a+1}]),t.push(s)}w.push(t)}S.addLegendBox().setAutoDispose({type:"max-width",maxWidth:.3}).add(S);let L=0;x().setSampleSize(60).setNumberOfSamples(f).setVariation(5).generate().setStreamRepeat(!0).setStreamInterval(1e3/60).setStreamBatchSize(1).toStream().map((e=>e.map((e=>80*e)))).forEach((e=>{if(M.getOn()||L<f){const t=w[L%f],a=e.map(((e,a)=>({id:t[a],yMin:0,yMax:e,zMin:L,zMax:L+1})));y.invalidateData(a),L++}})),(async()=>{const e=await fetch(new URL(document.head.baseURI).origin+new URL(document.head.baseURI).pathname+"examples/assets/0904/camera.json").then((e=>e.json()));if(!e)return void console.log("No Camera animation data.");console.log("Loaded Camera animation data.");let t=0;const a=()=>{if(A.getOn()){const{cameraLocation:a}=e.frames[Math.floor(t)%e.frames.length];S.setCameraLocation(a),t+=2}requestAnimationFrame(a)};requestAnimationFrame(a)})();const B=S.addUIElement(g.Column.setBackground(u.Rectangle));B.setPosition({x:0,y:100}).setOrigin(c.LeftTop).setMargin(10).setPadding(4).setAutoDispose({type:"max-height",maxHeight:.3});const C=e=>{M.setText(e?"Disable infinite streaming data":"Enable infinite streaming data"),M.getOn()!==e&&M.setOn(e)},M=B.addElement(m.CheckBox);M.addEventListener("switch",(e=>C(e.state))),C(!0);const b=e=>{A.setText(e?"Disable camera animation":"Enable camera animation"),A.getOn()!==e&&A.setOn(e)},A=B.addElement(m.CheckBox);A.addEventListener("switch",(e=>b(e.state))),b(!0),S.background.addEventListener("pointerdown",(()=>{b(!1)}))}},e=>{e.O(0,[502],(()=>e(e.s=44))),e.O()}]);