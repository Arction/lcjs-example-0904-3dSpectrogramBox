(self.webpackChunk=self.webpackChunk||[]).push([[524],{44:(e,t,a)=>{const s=a(89),n=a(863),{lightningChart:o,ColorRGBA:i,LUT:r,PalettedFill:l,AxisScrollStrategies:m,UIElementBuilders:d,UIOrigins:c,UILayoutBuilders:g,UIBackgrounds:x,regularColorSteps:u,Themes:p}=s,{createSpectrumDataGenerator:h}=n,S=120,f=o().Chart3D({theme:p[new URLSearchParams(window.location.search).get("theme")||"darkGold"]||void 0}).setTitle("3D Box Series Spectrogram").setBoundingBox({x:1,y:1,z:2});f.setCameraLocation({x:.1,y:.08,z:1.2}),f.getDefaultAxisY().setScrollStrategy(m.expansion).setInterval({start:0,end:100,stopAxisAfter:!1}).setTitle("Power spectrum P(f)"),f.getDefaultAxisX().setTitle("Frequency (Hz)"),f.getDefaultAxisZ().setTitle("Time").setDefaultInterval((e=>({end:e.dataMax,start:(e.dataMax??0)-S,stopAxisAfter:!1}))).setScrollStrategy(m.progressive);const y=new l({lut:new r({steps:u(0,100,f.getTheme().examples.intensityColorPalette),units:"dB",interpolate:!0}),lookUpProperty:"y"}),B=f.addBoxSeries().setFillStyle(y).setRoundedEdges(void 0).setName("Spectrogram (box)"),M=[];for(let e=0;e<S;e++){const t=[];for(let a=0;a<60;a++){const s=60*e+a;B.invalidateData([{id:s,yMin:0,yMax:0,zMin:0,zMax:0,xMin:a,xMax:a+1}]),t.push(s)}M.push(t)}f.addLegendBox().setAutoDispose({type:"max-width",maxWidth:.3}).add(f);let C=0;h().setSampleSize(60).setNumberOfSamples(S).setVariation(5).generate().setStreamRepeat(!0).setStreamInterval(1e3/60).setStreamBatchSize(1).toStream().map((e=>e.map((e=>80*e)))).forEach((e=>{if(w.getOn()||C<S){const t=M[C%S],a=e.map(((e,a)=>({id:t[a],yMin:0,yMax:e,zMin:C,zMax:C+1})));B.invalidateData(a),C++}})),(async()=>{const e=await fetch(document.head.baseURI+"examples/assets/0904/camera.json").then((e=>e.json()));if(!e)return void console.log("No Camera animation data.");console.log("Loaded Camera animation data.");let t=0;const a=()=>{if(O.getOn()){const{cameraLocation:a}=e.frames[Math.floor(t)%e.frames.length];f.setCameraLocation(a),t+=2}requestAnimationFrame(a)};requestAnimationFrame(a)})();const D=f.addUIElement(g.Column.setBackground(x.Rectangle));D.setPosition({x:0,y:100}).setOrigin(c.LeftTop).setMargin(10).setPadding(4).setAutoDispose({type:"max-height",maxHeight:.3});const A=e=>{w.setText(e?"Disable infinite streaming data":"Enable infinite streaming data"),w.getOn()!==e&&w.setOn(e)},w=D.addElement(d.CheckBox);w.onSwitch(((e,t)=>A(t))),A(!0);const k=e=>{O.setText(e?"Disable camera animation":"Enable camera animation"),O.getOn()!==e&&O.setOn(e)},O=D.addElement(d.CheckBox);O.onSwitch(((e,t)=>k(t))),k(!0),f.onBackgroundMouseDrag((()=>{k(!1)}))}},e=>{e.O(0,[502],(()=>(44,e(e.s=44)))),e.O()}]);